Business Brief: Simple Task Manager

Overview:
The Simple Task Manager is a command-line application designed to help users manage their tasks efficiently. It provides a user-friendly interface to add, track, and manage tasks. The application aims to enhance productivity by allowing users to organize their tasks effectively.

Key Features:
1. Task Creation: Users can add new tasks to the task manager by providing a description for each task. Each task will be assigned a unique identifier for easy reference.
2. Task Completion: Users can mark tasks as completed once they are finished. This feature allows users to track their progress and visualize completed tasks.
3. Task Listing: The application provides a functionality to list all the tasks in the task manager. Users can view the task identifier, description, and completion status in a structured format.
4. Task Deletion: Users have the ability to delete tasks from the task manager when they are no longer relevant or necessary. This helps in maintaining an up-to-date task list.

User Workflow:
1. Adding a Task:
- The user enters a command to add a new task.
- The application prompts the user to provide a description for the task.
- The task is added to the task manager with a unique identifier.
- The user receives a confirmation message.

2. Marking a Task as Completed:
- The user enters a command to mark a task as completed.
- The application prompts the user to enter the identifier of the task to be marked as completed.
- The task's completion status is updated accordingly.
- The user receives a confirmation message.

3. Listing Tasks:
- The user enters a command to list all tasks.
- The application retrieves and displays a structured list of all tasks, including their identifiers, descriptions, and completion status.

4. Deleting a Task:
- The user enters a command to delete a task.
- The application prompts the user to enter the identifier of the task to be deleted.
- The task is removed from the task manager.
- The user receives a confirmation message.

Additional Considerations:
- Handle invalid commands or input gracefully and provide informative error messages to the user.
- Implement data persistence, allowing users to store and retrieve their task data even after closing and reopening the application.
- Consider adding search or filtering capabilities to allow users to find specific tasks based on keywords or completion status.
- Enhance the user interface by adding color-coding or formatting options for better readability.
